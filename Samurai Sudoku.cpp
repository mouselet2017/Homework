#include <iostream>
#include <stdio.h>

using namespace std;

////定义一个全局的5*9*9数独
//char board[5][9][9] ={{{'.','4','.','.','.','.','.','9','.'},   //左上0
//                       {'9','.','5','8','.','6','2','.','1'},
//                       {'.','2','.','.','3','.','.','8','.'},
//                       {'.','8','.','.','.','.','.','5','.'},
//                       {'.','.','1','.','.','.','6','.','.'},
//                       {'.','7','.','.','.','.','.','1','.'},
//                       {'.','9','.','.','5','.','.','2','.'},
//                       {'3','.','7','4','.','9','5','.','.'},
//                       {'.','6','.','.','.','.','.','.','.'}},
//                      {{'.','9','.','.','.','.','.','4','.'},   //右上1
//                       {'5','.','6','1','.','7','3','.','2'},
//                       {'.','3','.','.','2','.','.','1','.'},
//                       {'.','8','.','.','.','.','.','7','.'},
//                       {'.','.','7','.','.','.','5','.','.'},
//                       {'.','6','.','.','.','.','.','2','.'},
//                       {'.','5','.','.','6','.','.','9','.'},
//                       {'.','.','1','3','.','5','7','.','4'},
//                       {'.','.','.','.','.','.','.','5','.'}},
//                      {{'.','7','.','.','.','.','.','.','.'},   //左下2
//                       {'9','.','6','5','.','1','3','.','.'},
//                       {'.','3','.','.','7','.','.','5','.'},
//                       {'.','5','.','.','.','.','.','2','.'},
//                       {'.','.','7','.','.','.','5','.','.'},
//                       {'.','9','.','.','.','.','.','4','.'},
//                       {'.','8','.','.','4','.','.','9','.'},
//                       {'3','.','4','2','.','7','8','.','5'},
//                       {'.','1','.','.','.','.','.','6','.'}},
//                      {{'.','.','.','.','.','.','.','5','.'},   //右下3
//                       {'.','.','9','2','.','3','6','.','7'},
//                       {'.','6','.','.','9','.','.','4','.'},
//                       {'.','9','.','.','.','.','.','3','.'},
//                       {'.','.','5','.','.','.','9','.','.'},
//                       {'.','2','.','.','.','.','.','6','.'},
//                       {'.','4','.','.','8','.','.','1','.'},
//                       {'1','.','2','6','.','7','5','.','4'},
//                       {'.','5','.','.','.','.','.','7','.'}},
//                      {{'.','2','.','.','.','.','.','5','.'},   //中4
//                       {'5','.','.','4','.','3','.','.','1'},
//                       {'.','.','.','.','2','.','.','.','.'},
//                       {'.','3','.','.','4','.','.','8','.'},
//                       {'.','.','5','3','.','7','1','.','.'},
//                       {'.','1','.','.','5','.','.','9','.'},
//                       {'.','.','.','.','1','.','.','.','.'},
//                       {'3','.','.','2','.','6','.','.','9'},
//                       {'.','5','.','.','.','.','.','6','.'}}};

char board[5][9][9]={{{'9','.','.','.','5','.','.','.','7'},        //左上0
                      {'.','.','.','9','.','7','.','.','.'},
                      {'.','.','.','6','.','4','.','.','.'},
                      {'.','1','3','.','2','.','8','9','.'},
                      {'2','.','.','7','.','1','.','.','3'},
                      {'.','9','6','.','4','.','7','2','.'},
                      {'.','.','.','3','.','5','.','.','.'},
                      {'.','.','.','4','.','9','.','.','.'},
                      {'3','.','.','.','7','.','.','.','6'}},
                     {{'2','.','.','.','9','.','.','.','6'},        //右上1
                      {'.','.','.','6','.','3','.','.','.'},
                      {'.','.','.','1','.','5','.','.','.'},
                      {'.','9','8','.','6','.','1','5','.'},
                      {'6','.','.','5','.','9','.','.','8'},
                      {'.','7','2','.','8','.','6','3','.'},
                      {'.','.','.','7','.','4','.','.','.'},
                      {'.','.','.','9','.','8','.','.','.'},
                      {'9','.','.','.','5','.','.','.','4'}},
                      {{'9','.','.','.','3','.','.','.','7'},       //左下2
                       {'.','.','.','5','.','9','.','.','.'},
                       {'.','.','.','7','.','4','.','.','.'},
                       {'.','1','3','.','2','.','7','5','.'},
                       {'5','.','.','8','.','7','.','.','2'},
                       {'.','7','4','.','1','.','9','8','.'},
                       {'.','.','.','6','.','8','.','.','.'},
                       {'.','.','.','4','.','1','.','.','.'},
                       {'6','.','.','.','7','.','.','.','9'}},
                     {{'4','.','.','.','9','.','.','.','3'},        //右下3
                      {'.','.','.','8','.','2','.','.','.'},
                      {'.','.','.','6','.','1','.','.','.'},
                      {'.','3','1','.','7','.','8','5','.'},
                      {'9','.','.','2','.','3','.','.','1'},
                      {'.','7','5','.','8','.','3','2','.'},
                      {'.','.','.','4','.','8','.','.','.'},
                      {'.','.','.','5','.','7','.','.','.'},
                      {'5','.','.','.','2','.','.','.','8'}},
                     {{'.','.','.','.','.','.','.','.','.'},        //中4
                      {'.','.','.','.','9','.','.','.','.'},
                      {'.','.','6','.','.','.','9','.','.'},
                      {'.','.','.','4','.','7','.','.','.'},
                      {'.','1','.','.','.','.','.','8','.'},
                      {'.','.','.','3','.','6','.','.','.'},
                      {'.','.','7','.','.','.','4','.','.'},
                      {'.','.','.','.','5','.','.','.','.'},
                      {'.','.','.','.','.','.','.','.','.'}}};

//char board[5][9][9]={{{'.','9','5','3','.','.','.','1','.'},
//                      {'7','.','.','.','1','.','.','.','3'},
//                      {'.','.','.','.','.','7','.','.','5'},
//                      {'.','.','7','.','.','.','.','.','1'},
//                      {'.','2','.','.','.','.','.','8','.'},
//                      {'1','.','.','.','.','.','6','.','.'},
//                      {'4','.','.','9','.','.','.','.','.'},
//                      {'2','.','.','.','4','.','.','.','6'},
//                      {'.','5','.','.','.','1','8','4','.'}},
//                     {{'.','2','5','3','.','.','.','6','.'},
//                      {'9','.','.','.','2','.','.','.','8'},
//                      {'.','.','.','.','.','6','.','.','4'},
//                      {'.','.','6','.','.','.','.','.','9'},
//                      {'.','4','.','.','.','.','.','5','.'},
//                      {'7','.','.','.','.','.','1','.','.'},
//                      {'6','.','.','7','.','.','.','.','.'},
//                      {'8','.','.','.','1','.','.','.','5'},
//                      {'.','5','.','.','.','4','3','9','.'}},
//                     {{'.','2','4','1','.','.','.','8','.'},
//                      {'6','.','.','.','9','.','.','.','5'},
//                      {'.','.','.','.','.','4','.','.','7'},
//                      {'.','.','1','.','.','.','.','.','9'},
//                      {'.','5','.','.','.','.','.','4','.'},
//                      {'7','.','.','.','.','.','2','.','.'},
//                      {'1','.','.','7','.','.','.','.','.'},
//                      {'3','.','.','.','8','.','.','.','6'},
//                      {'.','6','.','.','.','2','7','9','.'}},
//                     {{'.','1','2','3','.','.','.','7','.'},
//                      {'3','.','.','.','8','.','.','.','2'},
//                      {'.','.','.','.','.','6','.','.','3'},
//                      {'.','.','4','.','.','.','.','.','9'},
//                      {'.','9','.','.','.','.','.','8','.'},
//                      {'2','.','.','.','.','.','6','.','.'},
//                      {'9','.','.','1','.','.','.','.','.'},
//                      {'1','.','.','.','4','.','.','.','5'},
//                      {'.','5','.','.','.','7','2','1','.'}},
//                     {{'.','.','.','.','.','.','6','.','.'},
//                      {'.','.','6','.','.','.','8','.','.'},
//                      {'8','4','.','.','1','.','.','5','.'},
//                      {'.','.','.','3','.','6','.','.','.'},
//                      {'.','.','8','.','.','.','7','.','.'},
//                      {'.','.','.','5','.','9','.','.','.'},
//                      {'.','8','.','.','6','.','.','1','2'},
//                      {'.','.','5','.','.','.','3','.','.'},
//                      {'.','.','7','.','.','.','.','.','.'}}};

//打印
void print_sudoku(char board[5][9][9]){
    for (int k = 0; k < 5; k++) {
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                cout << board[k][i][j] << " ";
            }
            cout << endl;
        }
        cout << endl;
    }
    cout << endl;
}

//重合判断(判断所在方格是否与中间的9*9数独产生重叠)
bool superposition( int num, int colum, int row ){
    if ((num==0 && colum/3==2 && row/3==2) ||
        (num==1 && colum/3==2 && row/3==0) ||
        (num==2 && colum/3==0 && row/3==2) ||
        (num==3 && colum/3==0 && row/3==0)){return true;}
    return false;
}

// 判断填入数据n是否可行
bool is_valid(char board[5][9][9], int num, int colum, int row, char n) {
    for (int i = 0; i < 9; i++) {
        if (board[num][colum][i] == n) return false;                             //判断行重复
        if (board[num][i][row] == n) return false;                               // 判断列重复
        if (board[num][(colum/3)*3 + i/3][(row/3)*3 + i%3] == n) return false;   // 判断框重复
    }
    return true;
}

bool do_sukodu(char board[5][9][9], int num, int colum, int row) {
    // 穷举到最后一列的话就换到下一行重新开始。
    if (row == 9) { return do_sukodu(board, num, colum + 1,  0); }
    //穷举到最后一行的话就换下一个9*9数独开始
    if (colum == 9) { return do_sukodu(board, num + 1, 0,  0);}
    //穷举完之后返回true
    if (num == 5) {return true;}

    for (int k = num; k < 5; k++) {
        for (int i = colum; i < 9; i++) {
            for (int j = row; j < 9; j++) {
                //去除预设情况
                if (board[k][i][j] != '.') { return do_sukodu(board, k, i, j + 1); }

                //开始枚举
                for (char ch = '1'; ch <= '9'; ch++) {
                    if ( !superposition(k, i, j) ){    //不重合
                        if(!is_valid(board, k, i, j, ch))
                            continue;
                        //如果合法则暂时替换
                        board[k][i][j] = ch;
                        if( do_sukodu(board, k, i, j + 1 ) ){ return true;}
                        board[k][i][j] = '.';
                    } else {                                //重合的角
                        if (is_valid(board, k,  i, j, ch) && is_valid(board, 4, i + ( k<2 ? -6 : 6 ), j + (k%2==0 ? -6 : 6 ), ch)){
                            board[k][i][j] = ch;
                            board[4][i + ( k<2 ? -6 : 6 )][j + ( k%2==0 ? -6 : 6 )] = ch;
                            if( do_sukodu(board, k, i, j + 1 ) ){ return true;}
                            board[k][i][j] = '.';
                            board[4][i + ( k<2 ? -6 : 6 )][j + ( k%2==0 ? -6 : 6 )] = '.';
                        } else{ continue; }
                    }
                }
                //穷举完后依然没有找到可行解说明之前的推理有问题，所以返回false
                return false;
            }
        }
    }
    return false;
}

int main() {
    do_sukodu(board,0,0,0);
    print_sudoku(board);
    return 0;
}
